version: '2.1'
services:
  kibana:
    image: docker.elastic.co/kibana/kibana${VERSION_TYPE}:${ELASTIC_VERSION}
    container_name: kibana
    volumes:
      - "./kibana.yml:/usr/share/kibana/config/kibana.yml"
    restart: always
    ports:
      - "5601:5601"
    depends_on: ['elasticsearch']
    environment:
      - "ELASTICSEARCH_PASSWORD=${ES_PASSWORD}"
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/login"]
      retries: 6

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch${VERSION_TYPE}:${ELASTIC_VERSION}
    environment:
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms${ES_JVM_HEAP} -Xmx${ES_JVM_HEAP}"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 2g
    healthcheck:
      test: ["CMD", "curl","-s" ,"-f", "-u", "elastic:${ES_PASSWORD}", "http://localhost:9200/_cat/health"]
    volumes:
      - "/data/esdata:/usr/share/elasticsearch/data"
      - ".elasticsearch.yml:/usr/share/elasticsearch/elasticsearch.yml"
    ports:
      - "9200:9200"

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash${VERSION_TYPE}:${ELASTIC_VERSION}
    volumes:
      - "./logstash.conf:/config-dir/logstash.conf"
    restart: always
    command: logstash -f /config-dir/logstash.conf
    ports:
      - "9600:9600"
      - "7777:7777"
    environment:
      - "ELASTICSEARCH_PASSWORD=${ES_PASSWORD}"
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "localhost:9600/?pretty"]

  kafka1:
    container_name: kafka1
    image: wurstmeister/kafka
    depends_on: [ 'zoo1', 'zoo2', 'zoo3']
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_LOG_RETENTION_HOURS: "168"
      KAFKA_LOG_RETENTION_BYTES: "100000000"
      KAFKA_ZOOKEEPER_CONNECT:  zoo1:2181,zoo2:2181,zoo3:2181
      KAFKA_ADVERTISED_HOST_NAME: "kafka1"
      KAFKA_CREATE_TOPICS: "log:3:3"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'

  kafka2:
    container_name: kafka2
    image: wurstmeister/kafka
    depends_on: [ 'zoo1', 'zoo2', 'zoo3']
    ports:
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ADVERTISED_HOST_NAME: "kafka2"
      KAFKA_LOG_RETENTION_HOURS: "168"
      KAFKA_LOG_RETENTION_BYTES: "100000000"
      KAFKA_ZOOKEEPER_CONNECT:  zoo1:2181,zoo2:2181,zoo3:2181
      KAFKA_CREATE_TOPICS: "log:3:3"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'

  kafka3:
    image: wurstmeister/kafka
    container_name: kafka3
    depends_on: [ 'zoo1', 'zoo2', 'zoo3']
    ports:
      - "9094:9092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ADVERTISED_HOST_NAME: "kafka3"
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_LOG_RETENTION_HOURS: "168"
      KAFKA_LOG_RETENTION_BYTES: "100000000"
      KAFKA_ZOOKEEPER_CONNECT:  zoo1:2181,zoo2:2181,zoo3:2181
      KAFKA_CREATE_TOPICS: "log:3:3"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'

  zoo1:
    image: elevy/zookeeper:latest
    container_name: zoo1
    environment:
      MYID: 1
      SERVERS: zoo1,zoo2,zoo3
    ports:
      - "2181:2181"

  zoo2:
    image: elevy/zookeeper:latest
    container_name: zoo2
    environment:
      MYID: 2
      SERVERS: zoo1,zoo2,zoo3
    ports:
      - "2182:2181"

  zoo3:
    image: elevy/zookeeper:latest
    container_name: zoo3
    environment:
      MYID: 3
      SERVERS: zoo1,zoo2,zoo3
    ports:
      - "2183:2181"

  filebeat:
    image: docker.elastic.co/beats/filebeat${VERSION_TYPE}:${ELASTIC_VERSION}
    user: root
    mem_limit: 1g
    container_name: filebeat
    command: filebeat -e -strict.perms=false
    restart: on-failure
    volumes:
      - "./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro"
      - "./apache-logs:/apache-logs"
      - "/var/log/:/var/log/host/:ro"
      - "/var/lib/docker/containers:/docker-logs/containers"
    depends_on: 
      [ 'kafka1', 'kafka2', 'kafka3', 'elasticsearch']

  apache:
    image: lzrbear/docker-apache2-ubuntu
    container_name: apache
    volumes:
      - "./apache-logs:/var/log/apache2"
    ports:
      - "8888:80"
    depends_on:
      - logstash
